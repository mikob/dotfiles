set nocompatible   		    " choose no compatibility with legacy vi
set encoding=utf-8
set showcmd 			    " display incomplete commands
set mouse=a                 " enable the mouse
set t_Co=256                " set 256 colors mode
set relativenumber          " show relative line numbers
if exists('+colorcolumn')
    set colorcolumn=80      " line 80 column
endif
" set autoindent
" set smartindent
" set nocindent               " need for proper js indenting
filetype indent on
set wildmode=list:longest,list:full " the autocomplete list setting
syntax on
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabNoCompleteAfter = [';','\s', '{', '}', '"', "'", ':', ')']

"" Folding
" use ack-grep for searching
set grepprg=ack-grep\ -a

" set foldmethod=syntax
set foldlevelstart=1

"" Pathogen
call pathogen#infect()
call pathogen#helptags()

"" Ctrl-P
set runtimepath^=~/.vim/bundle/ctrlp.vim

"" Theme
colorscheme wombat256
set guifont=Inconsolata\ Medium\ 11  " font

"" Whitespace
set nowrap
set tabstop=4 shiftwidth=4 
set softtabstop=4           " backspace through the tab
set expandtab 			    " use spaces, not tabs
set backspace=indent,eol,start  " backspace through everything in insert mode

"" File type specialities
filetype plugin indent on 	         " load file type plugins + indentation
autocmd BufRead,BufNewFile *.jsm set filetype=javascript
autocmd FileType ruby setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab
autocmd FileType html,htmldjango let b:closetag_html_style=1
autocmd FileType html,xhtml,xml,htmldjango source ~/.vim/bundle/closetag/plugin/closetag.vim

"" Save folding
au BufWinLeave * silent! mkview
au BufWinEnter * silent! loadview

"" Searching
set hlsearch   			" highlight matches
set incsearch 			" set incremental searching
set ignorecase			" auto make searches case insensitive
set smartcase 			" ...unless they contain at least one capital letter

"" Keyboard remapping
" Command T
noremap <leader>o <Esc>:CommandT<CR>
noremap <leader>O <Esc>:CommandTFlush<CR>
noremap <leader>m <Esc>:CommandTBuffer<CR>
" CTags
noremap <F12> <Esc>:!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" NERD Tree
noremap <F2> <Esc>:NERDTreeToggle<CR>
" Custom find/replace
noremap <F3> <Esc>:promptrepl<CR>
" Reselect visual block after indent with ctrl
vnoremap <Ctrl-<> < <gv
vnoremap <Ctrl->> > >gv
